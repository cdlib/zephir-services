import os
import json
import shutil
import sys

import plyvel
import pytest

sys.path.append(os.path.join(os.path.dirname(__file__), "helpers"))


@pytest.fixture
def tmpdatadir(request, tmpdir):
    """Copy test data into the temporary directory for tests.

    Note:
        1) Test data is located by convention. Create a directory with the same name as
        the test file (test-file: test_mymodule.py, test-data: test_mymodule/* )
        2) Using the temporary directory prevents overwriting of data in test suite

    Args:
        request: Fixture with test case filename, used to find test data.
        tmpdir: Fixture for test case temporary directory generated by pytest.

    Returns:
        Filepath of test data subdirectory within the temporary dirctory.

    """
    data_dirname = os.path.splitext(os.path.basename(request.fspath))[0]
    data_path = os.path.splitext(request.fspath)[0]
    tmp_data_path = os.path.join(tmpdir, data_dirname)
    shutil.copytree(data_path, tmp_data_path)
    return tmp_data_path


@pytest.fixture
def json_loader(tmpdatadir, request):
    """Load json data files into a Dict

    Args:
        tmpdatadir: Populated temporary directory with test data

    Returns:
        Json data files converted into dictionary

    """
    files = [
        f
        for f in os.listdir(tmpdatadir)
        if os.path.isfile(os.path.join(tmpdatadir, f)) and f.endswith(".json")
    ]
    data = {}
    for file in files:
        with open(os.path.join(tmpdatadir, file), "r") as read_file:
            data[file] = json.load(read_file)
    return data


@pytest.fixture
def data_dir(request):
    """
    Note:
        Test data is located by convention in a directory with the same name as
        the test file, for example
        test-file: test_mymodule.py
        data-dir: test_mymodule

    Args:
        request: Fixture with test case filename, used to find test data directory.

    Returns:
        Filepath of the default test data directory.

    """
    request_path = os.path.dirname(request.fspath)
    request_filename = os.path.basename(request.fspath)
    td_dirname = os.path.splitext(request_filename)[0]
    return os.path.join(request_path, td_dirname)
