import os

import plyvel

# convenience methods for converting ints to and from bytes
def int_to_bytes(inum):
    return inum.to_bytes((inum.bit_length() + 7) // 8, "big")

def int_from_bytes(bnum):
    return int.from_bytes(bnum, "big")

def create_primary_ldb(path, data):
    """Create a primary ocn lookup LevelDB database based on casedata

    Note:
        1) This expects an list of lists: [[ocn,primary-ocn]]

    Args:
        tmpdir: Fixture for test case temporary directory generated by pytest.
        case_data: List of list test caes data loaded by fixture

    Returns:
        Path to the LevelDB database

    """
    db_path = os.path.join(path, "primary_lookup/")
    db = plyvel.DB(db_path, create_if_missing=True)
    for row in data:
        db.put(int_to_bytes(int(row[0])), int_to_bytes(int(row[1])))
    db.close()
    return db_path

def split_cases(data):
    """Splits ocn case data into input and expected output

    Args:
        tmpdir: Fixture for test case temporary directory generated by pytest.
        case_data: List of list test caes data loaded by fixture

    Returns:
        Dict of "input" and "expected" lists

    """
    cases = {"input": [], "expected": []}
    for idx, x in enumerate(data):
        cases["input"].append(x[0])
        cases["expected"].append(x[1])
    return cases
