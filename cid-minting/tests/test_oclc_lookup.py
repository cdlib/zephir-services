import os

import pytest
import plyvel

from oclc_lookup import get_primary_ocn

# TESTS
def test_get_primary_ocn(setup):
    input, expect = split(setup["data"]["primary.json"])
    results = [get_primary_ocn(ocn, os.path.join(setup["tmpdatadir"],"primary/")) for ocn in input]
    assert expect.sort() == results.sort()


# FIXTURES
@pytest.fixture
def setup(tmpdatadir, json_loader):
    data = json_loader
    db_path = create_primary_db(tmpdatadir, data["primary.json"])
    return{
        "tmpdatadir": tmpdatadir,
        "data": json_loader,
    }

# HELPERS
def int_to_bytes(inum):
    return inum.to_bytes((inum.bit_length() + 7) // 8, "big")

def int_from_bytes(bnum):
    return int.from_bytes(bnum, "big")

def create_primary_db(path, data):
    """Create a primary ocn lookup LevelDB database based on case data

    Note:
        1) This expects an list of lists: [[ocn,primary-ocn]]

    Args:
        tmpdir: Fixture for test case temporary directory generated by pytest.
        case_data: List of list test caes data loaded by fixture

    Returns:
        Path to the LevelDB database

    """
    db_path = os.path.join(path, "primary/")
    db = plyvel.DB(db_path, create_if_missing=True)
    for row in data:
        print(row)
        db.put(int_to_bytes(int(row[0])), int_to_bytes(int(row[1])))
    db.close()
    return db_path

def split(data):
    """Splits ocn case data into input and expected output

    Args:
        tmpdir: Fixture for test case temporary directory generated by pytest.
        case_data: List of list test caes data loaded by fixture

    Returns:
        List of "input" and "expect" lists

    """
    input = []
    expect = []
    for x in data:
        input.append(x[0])
        expect.append(x[1])
    return [input,expect]
